#!/usr/bin/env bash
# Generator for ~/.ssh/config

set -e

PATH="$HOME/code/bin:$PATH"

. lib.bash || exit
. libfilterfile.bash || exit

progname='ssh/generate'

# match_eval helper functions

Host() {
	: ${FQDN:=$(fqdn)}
	match_hostname "$1"
}

# generator

generate() {
	echo "# GENERATED FILE, DO NOT BOTHER EDITING"
	echo "# Updated on $(date) by $USER@$HOSTNAME"
	cat "${input[@]}" 2>/dev/null | filter_file match_eval
}

srcdir=${BASH_SOURCE[0]%/*}
input=( "$srcdir/config"
	"$srcdir/config-$HOSTNAME" )
output=".generated-config-$HOSTNAME"

if [[ ! -e ${input[0]} ]]; then
	die "input file '${input[0]}' does not exist"
elif [[ $1 == "--test" ]]; then
	generate
else
	if [[ ! -d ~/.ssh ]]; then
		debug "ok, ~/.ssh doesn't exist yet - creating"
		mkdir -p -m 0700 ~/.ssh
		true
	elif [[ ! -e ~/.ssh/config ]]; then
		debug "ok, config doesn't exist yet - creating"
		true
	elif [[ ~/.ssh/config -ef ~/.ssh/$output ]]; then
		debug "ok, generated config found - updating"
		true
	elif [[ -L ~/.ssh/config ]]; then
		if [[ $(readlink ~/.ssh/config) == .generated-config-* ]]; then
			debug "ok, generated config found - updating"
			true
		else
			debug "symlinked config found - exiting"
			exit 0
		fi
	else
		die "refusing to overwrite local ~/.ssh/config"
	fi
	generate > ~/.ssh/$output
	ln -sf $output ~/.ssh/config
fi
