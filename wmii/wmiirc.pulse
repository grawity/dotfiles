#!bash

(( StatusPulse )) || return 0

update_pulse_status() {
	local FG=${NormalColors%% *}
	local BG=${NormalColors#* }

	local volume=$(ponymix get-volume)
	local text='volume'
	local max=11
	local cur=$((volume * max / 100))
	local bar=$(gauge $cur $max)

	if ponymix is-muted; then
		bar=${bar//[! ]/Â·}
	fi

	{
		if (( cur >= 9 )); then
			echo colors "#ff3333 $BG"
		elif (( cur >= 8 )); then
			echo colors "#ddbb44 $BG"
		elif (( cur >= 7 )); then
			echo colors "#ffdd88 $BG"
		elif (( cur >= 6 )); then
			echo colors "#ffffff $BG"
		elif (( cur >= 5 )); then
			echo colors "#bbbbbb $BG"
		else
			echo colors "$FG $BG"
		fi
		echo label "$text [$bar]"
	} | wmiir create "/rbar/pa_volume"
}

pulse_status_loop() {
	printf "StatusPulse" > /proc/self/comm
	update_pulse_status
	stdbuf -o0 pactl subscribe | while read -r line; do
		if [[ $line == *change*on*sink* ]]; then
			update_pulse_status
		fi
	done
}

event_RightBarClick_pa_volume() {
	local button=$1 item=$2
	case $button in
		1) mpc -q toggle || spawn mpd;;
		2) ;;
		3) ;;
		4) ponymix increase 5;;
		5) ponymix decrease 5;;
	esac > /dev/null
}

StartupJobs+=(pulse_status_loop)
